import{aB as e,Z as t,a3 as n}from"./@vue.78dd21e6.js";import"./highlight.js.02565251.js";const o={class:"markdown-body"},r=[n('<h1>Examples</h1><h2>createDatePicker <em>(input: HTMLInputElement,options)=&gt;void</em></h2><pre><code>const input = document.querySelector(&#39;#input&#39;)\nconst picker = createDatePicker(input, {\n  type: &#39;week&#39;,\n  offset: 20,\n  placement: &#39;bottom&#39;,\n})\n</code></pre><h2>destroyed <em>()=&gt;void</em></h2><pre><code>const input = document.querySelector(&#39;#input&#39;)\nconst picker = createDatePicker(input)\npicker.destroyed()\n</code></pre><h2>destroy <em>(pickers?: State[])=&gt;void</em></h2><pre><code>const input = document.querySelector(&#39;#input&#39;)\nconst picker = createDatePicker(input, {\n  type: &#39;week&#39;,\n  offset: 20,\n  placement: &#39;bottom&#39;,\n})\n</code></pre><h2>USE IN VUE</h2><p><strong>Options</strong>的响应式 <a href="https://www.npmjs.com/package/better-datepicker/v/0.2.3">0.2.2</a>在版本后开始支持</p><p>当传入的<strong>options</strong>对象的某个属性值被修改的时候，会同步更新在视图上，这让你无需手动使用<strong>update</strong>函数</p><pre><code class="language-js">export default defineComponent({\n  name: &#39;datepicker&#39;,\n  props:{\n    placeholder: String,\n    type: String\n    //......\n  },\n  data() {\n    return {\n      datepicker: null,\n    }\n  },\n  mounted() {\n    const input = this.$refs.input\n    this.datepicker = createDatePicker(input.$el, this.$props)\n  },\n  beforeUnmount() {\n    this.datepicker.destroyed()\n  }\n}\n</code></pre>',11)],p={setup:(n,{expose:p})=>(p({frontmatter:{}}),(n,p)=>(e(),t("div",o,r)))};export{p as default};
